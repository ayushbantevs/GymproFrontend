/**
 * @fileoverview added by tsickle
 * Generated from: lib/animations/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation } from '@angular/animations';
/** @type {?} */
const customAnimation = animation([
    style({
        opacity: '{{opacity}}',
        transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'
    }),
    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))
], {
    params: {
        duration: '200ms',
        delay: '0ms',
        opacity: '0',
        scale: '1',
        x: '0',
        y: '0',
        z: '0'
    }
});
/** @type {?} */
export const InputAnimations = [
    trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),
    trigger('animateStagger', [
        state('50', style('*')),
        state('100', style('*')),
        state('200', style('*')),
        transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], { optional: true })),
        transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], { optional: true })),
        transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], { optional: true }))
    ]),
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1tYXRlcmlhbC1leHRlbnNpb25zL2dvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS8iLCJzb3VyY2VzIjpbImxpYi9hbmltYXRpb25zL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBQyxNQUFNLHFCQUFxQixDQUFDOztNQUVoSSxlQUFlLEdBQUcsU0FBUyxDQUMvQjtJQUNFLEtBQUssQ0FBQztRQUNKLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLFNBQVMsRUFBRSxtREFBbUQ7S0FDL0QsQ0FBQztJQUNGLE9BQU8sQ0FBQyx1REFBdUQsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDN0UsRUFDRDtJQUNFLE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLEtBQUssRUFBRSxLQUFLO1FBQ1osT0FBTyxFQUFFLEdBQUc7UUFDWixLQUFLLEVBQUUsR0FBRztRQUNWLENBQUMsRUFBRSxHQUFHO1FBQ04sQ0FBQyxFQUFFLEdBQUc7UUFDTixDQUFDLEVBQUUsR0FBRztLQUNQO0NBQ0YsQ0FDRjs7QUFFRCxNQUFNLE9BQU8sZUFBZSxHQUFHO0lBQzdCLE9BQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTlFLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRTtRQUN4QixLQUFLLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN2QixLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUV4QixVQUFVLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUM1RixVQUFVLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztRQUM5RixVQUFVLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztLQUMvRixDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FuaW1hdGUsIGFuaW1hdGVDaGlsZCwgYW5pbWF0aW9uLCBxdWVyeSwgc3RhZ2dlciwgc3RhdGUsIHN0eWxlLCB0cmFuc2l0aW9uLCB0cmlnZ2VyLCB1c2VBbmltYXRpb259IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5jb25zdCBjdXN0b21BbmltYXRpb24gPSBhbmltYXRpb24oXG4gIFtcbiAgICBzdHlsZSh7XG4gICAgICBvcGFjaXR5OiAne3tvcGFjaXR5fX0nLFxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoe3tzY2FsZX19KSB0cmFuc2xhdGUzZCh7e3h9fSwge3t5fX0sIHt7en19KSdcbiAgICB9KSxcbiAgICBhbmltYXRlKCd7e2R1cmF0aW9ufX0ge3tkZWxheX19IGN1YmljLWJlemllcigwLjAsIDAuMCwgMC4yLCAxKScsIHN0eWxlKCcqJykpXG4gIF0sXG4gIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgIGR1cmF0aW9uOiAnMjAwbXMnLFxuICAgICAgZGVsYXk6ICcwbXMnLFxuICAgICAgb3BhY2l0eTogJzAnLFxuICAgICAgc2NhbGU6ICcxJyxcbiAgICAgIHg6ICcwJyxcbiAgICAgIHk6ICcwJyxcbiAgICAgIHo6ICcwJ1xuICAgIH1cbiAgfVxuKTtcblxuZXhwb3J0IGNvbnN0IElucHV0QW5pbWF0aW9ucyA9IFtcbiAgdHJpZ2dlcignYW5pbWF0ZScsIFt0cmFuc2l0aW9uKCd2b2lkID0+IConLCBbdXNlQW5pbWF0aW9uKGN1c3RvbUFuaW1hdGlvbildKV0pLFxuXG4gIHRyaWdnZXIoJ2FuaW1hdGVTdGFnZ2VyJywgW1xuICAgIHN0YXRlKCc1MCcsIHN0eWxlKCcqJykpLFxuICAgIHN0YXRlKCcxMDAnLCBzdHlsZSgnKicpKSxcbiAgICBzdGF0ZSgnMjAwJywgc3R5bGUoJyonKSksXG5cbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IDUwJywgcXVlcnkoJ0AqJywgW3N0YWdnZXIoJzUwbXMnLCBbYW5pbWF0ZUNoaWxkKCldKV0sIHtvcHRpb25hbDogdHJ1ZX0pKSxcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IDEwMCcsIHF1ZXJ5KCdAKicsIFtzdGFnZ2VyKCcxMDBtcycsIFthbmltYXRlQ2hpbGQoKV0pXSwge29wdGlvbmFsOiB0cnVlfSkpLFxuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gMjAwJywgcXVlcnkoJ0AqJywgW3N0YWdnZXIoJzIwMG1zJywgW2FuaW1hdGVDaGlsZCgpXSldLCB7b3B0aW9uYWw6IHRydWV9KSlcbiAgXSksXG5dO1xuIl19